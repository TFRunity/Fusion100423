@model UserAtSite
@inject IProductMethods<Product> _methods
@{ 
    OrderNavbarViewModel viewModel = new OrderNavbarViewModel();
    if (Model.OrderId != Guid.Empty)
    {
        OrderNavbarViewModel _viewModel = new OrderNavbarViewModel() { OrderId = Model.OrderId, Authentificated = true, Email = Model.Email };
        viewModel = _viewModel;
    }
    else
    {
        OrderNavbarViewModel _viewModel = new OrderNavbarViewModel() { Authentificated = false};
        viewModel = _viewModel;
    }
}
@{await Html.RenderPartialAsync("_Navbar", viewModel);}
<div class="container mt-4">
    <div class="flex-row d-flex justify-content-center ">
        @{
            if (Model.MainPicture != null)
            {
                <img class="img-fluid col-3 rounded-1" src="@Model.MainPicture" />
            }
            else
            {
                <img class="img-fluid col-3 rounded-1" src="/assets/img/logos.jpg" />
            }
        }
    </div>
</div>
<div class="d-flex flex-row justify-content-evenly flex-wrap mt-4">
    @*Добавить несколько кнопок с вьюхами и 1 кнопку на index страничку *@
    <a href="@Url.Action("Editpassword","Account", new { email = Model.Email })" class="btn btn-outline-info col-2 p-2 m-0"><i class="fa-solid fa-lock "></i><h3 class="me-3">Изменить пароль</h3></a>
    <a href="@Url.Action("OrderHistory","Account", new { email = Model.Email })" class="btn btn-outline-primary col-2 p-2 m-0"><i class="fa-solid fa-clock-rotate-left"></i><h3 class="ms-3">История заказов</h3></a>
    <a href="@Url.Action("Edit","Account", new { email = Model.Email })" class="btn btn-outline-warning col-2 p-2 m-0"><i class="fa-solid fa-user-plus"></i><h3 class="me-3 ms-3">Изменить данные</h3></a>
    <a href="@Url.Action("Logout","Account")" class="btn btn-outline-danger col-2 p-2 m-0"><i class="fa-solid fa-door-open"></i><h3 class="me-3">Выйти</h3></a>
</div>







